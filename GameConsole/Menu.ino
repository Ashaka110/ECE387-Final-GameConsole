const uint16_t menucolors[8] PROGMEM = {0, 8192,4,8480, 288,8196,292,8484};//matrix.Color333(1, 0, 0), matrix.Color333(0, 1, 0), matrix.Color333(0, 0, 1), matrix.Color333(1, 0, 1), matrix.Color333(1, 1, 0), matrix.Color333(0, 1, 1), matrix.Color333(1, 2, 0)};  // index matches with pieces index
const uint16_t tetrisTitle[] PROGMEM = {
       012345,067000, 00000, 00000, 00000, 00000,
        01111,011110, 00022,022220, 00022,020000,
        01111,011113,033322,022224,044402, 05550,
        00001,010003,033300,022004, 00402, 05000,
        00001,010003,030000,022004,044402, 05550,
        00001,010003,033000,022004,040002, 00050,
        00001,010003,033000,022004, 04022,020050,
        00001,010003,030000,022004, 00400, 05550,
        00001,010003,033300, 00000, 00000, 00000,
        00000, 00003,033300, 00066,066666,060000,
        00000, 00000, 00000, 00066,066666,060000,
        00000, 00000, 00000, 00000, 00000, 00000};

 const uint16_t tictactoeTitle[] PROGMEM = { 
        00000, 00007, 00000, 00000,070000, 00000,  
        00000, 00007, 00000, 00000,070000, 00000,
        07777,077777,077777,077777,077777,077770,
        00000, 00000, 00000, 00000, 00000, 00000,
       022222,022207, 02220,020220,070222,022222,
        02002, 02007, 00202, 02200,070020,020220,
        02022,022207, 00202, 02220,070020,022222,
        00000, 00000, 00000, 00000, 00000, 00000,
        07777,077777,077777,077777,077777,077777,
        00000, 00007, 00000, 00000,070000, 00000,
        00000, 00007, 00000, 00000,070000, 00000};

 const uint16_t spaceInvadersTitle[] PROGMEM = { 
        00555, 05550,055505,055055,050101, 00000,
        00500, 05050,050505, 00050, 00010, 00000,
        00555, 05550,055505, 00055, 00101, 04040,
        00005, 05000,050505, 00050, 00000, 00400,
        00555, 05000,050505,055055,050000, 04040,
        00000, 00000, 00000, 00000, 00000, 00000,
        00000, 00000, 00000, 00000, 00000, 00000,
       077707, 00707, 07007, 00770, 07770,077000,
        07007,070707, 07070,070707, 07000,070700,
        07007, 07707, 07077,070707, 07700,077000,
       077707, 00700,070070,070770, 07770,070700,
        00000, 00000, 00000, 00000, 00000, 00000};

const uint16_t pacManTitle[] PROGMEM= { 
        00000, 00000, 00000, 00000, 00000, 00000,
        03000,030003, 00030, 00300, 03000,030030,
        00000, 00000, 00000, 00000, 00000, 00000,
       022200, 02200,022200,020002, 00220, 02002,
       020020,022220,020200,022022, 02222, 02202,
       020020,020020,020000,022222, 02002, 02222,
       022200,020020,020000,020002, 02002, 02022,
       020000,022220,020200,020002, 02222, 02022,
       020000,020020,022200,020002, 02002, 02002,
        00000, 00000, 00000, 00000, 00000, 00000,
        03000,030003, 00030, 00300, 03000,030030,
        00000, 00000, 00000, 00000, 00000, 00000};

uint8_t selection;


void menuLoop() {
  // put your main code here, to run repeatedly:

    // Serial.print("HI  ");
    Serial.println(freeRam() );

    if(isUpButtonPressed()){
         matrix.fillScreen(matrix.Color333(0,0,0));
          selection+=3;
         selection%=4;
    }
    if(isDownButtonPressed())
    {
       matrix.fillScreen(matrix.Color333(0,0,0));
   
       
         selection+=1;
         selection%=4;
    }
    if(selection < 2)
    {
        drawTitle(tetrisTitle, 1, 3);
        drawTitle(tictactoeTitle, 1, 17);
    }else
    {
        drawTitle(spaceInvadersTitle, 1, 3);
        drawTitle(pacManTitle, 1, 17);
    }
    matrix.drawRect(0, 2 + selection%2*14, 32 ,13,  matrix.Color333(1, 1, 0) );

    
    if(isSelectButtonPressed())
    {
        matrix.fillScreen(matrix.Color333(0,0,0));
        startGame(selection);
    }
}

void drawTitle(uint16_t* data, int x, int y)
{
  for(int i = 0; i < 6*11; i++)
  {
      uint16_t segment = pgm_read_word(&data[i]);
      for (int c = 0; c < 5; c++)
      {
          matrix.drawPixel((i%6)*5 + c + x, i/6 + y, pgm_read_word(&menucolors[segment>>((4-c)*3) & 7])); 
      }
  } 
}

